this.PublicController = RouteController.extend({    loadingTemplate: 'loading',    layoutTemplate: "publicLayout",});this.DashboardController = RouteController.extend({    layoutTemplate: 'layout',    loadingTemplate: 'loading',    // Subscriptions or other things we want to "wait" on.    onBeforeAction: function() {        if (Meteor.loggingIn()) {            return this.render("loading");        } else if (Meteor.user()) {            return this.next();        } else {            return this.redirect("/");        }    }});Router.route('index',{    path:'/',    controller: 'PublicController',    action: function(){        if(Meteor.user()){            this.layout("layout");            return this.render("home");        }else{            this.layout("publicLayout");            return this.render("publicHome");        }    }    });Router.route('inflate.drivers', {    path: '/inflate/drivers',    layoutTemplate: 'tabsLayout'    });Router.route('inflate.drives', {    path: '/inflate/drives',    layoutTemplate: 'tabsLayout'    });Router.route('/about', {    name: 'about',    controller: 'DashboardController',    });    Router.route('/profile', {    name: 'profileTemplate',    controller: 'DashboardController',    });Router.route('/signIn',{    name: 'userAccountsIonic',    controller: 'PublicController',    });if (Meteor.isServer) {    Router.map(function () {        this.route('GeolocationBGRoute', {            path: '/api/geolocation',            where: 'server',            action: function () {                console.log('server says HI');                this.response.setHeader("Access-Control-Allow-Origin", "*");                this.response.setHeader("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");                if (this.request.method == 'OPTIONS') {                    this.response.setHeader("Access-Control-Allow-Methods", "POST, PUT, GET, DELETE, OPTIONS");                    this.response.end("OPTIONS Response");                    console.log('server gives options');                    return;                }                // GET, POST, PUT, DELETE                var requestMethod = this.request.method;                // Data from a POST request                var requestData = this.request.body;                // log stuff                console.log('GeolocationBG post: ' + requestMethod);                console.log(JSON.stringify(requestData));                // TODO: security/validation                //  require some security with data                //  validate userId/uuid/etc (inside Meteor.call?)                // Can insert into a Collection from the server (or whatever)                //if (GeoLog.insert(requestData)) {                console.log('GeolocationBG inserted');                this.response.writeHead(200, {'Content-Type': 'application/json'});                this.response.end('ok');                return;                //}                // if we end up with an error case, you can return 500                //this.response.writeHead(500, {'Content-Type': 'application/json'});                //this.response.end('failure');            }        });    });}